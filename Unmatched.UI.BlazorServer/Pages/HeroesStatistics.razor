@page "/heroes-statistics"
@using Unmatched.Dtos
@using Unmatched.Services
@inject IUnmatchedService UnmatchedService
@inject NavigationManager NavManager

<PageTitle>Heroes Statistics</PageTitle>

<h1>Heroes Statistics</h1>

@if (heroes == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <SfGrid DataSource="@heroes" AllowPaging="true" AllowSorting="true">
        <GridPageSettings PageSize="20"></GridPageSettings>
        <GridEvents OnRecordClick="RecordClickHandler" TValue="HeroStatisticsDto"></GridEvents>
        <GridColumns>
            <GridColumn Field=@nameof(HeroStatisticsDto.HeroName) HeaderText="Hero" Width="120"></GridColumn>
            <GridColumn Field=@nameof(HeroStatisticsDto.TotalMatches) HeaderText="Matches" Width="80"></GridColumn>
            <GridColumn Field=@nameof(HeroStatisticsDto.TotalWins) HeaderText="Wins" Width="80"></GridColumn>
            <GridColumn Field=@nameof(HeroStatisticsDto.TotalLooses) HeaderText="Looses" Width="80"></GridColumn>
            <GridColumn Field=@nameof(HeroStatisticsDto.Kd) HeaderText="K/D" Width="50"></GridColumn>
        </GridColumns>
    </SfGrid>
}

@code {

    private IEnumerable<HeroStatisticsDto> heroes;

    protected override async Task OnInitializedAsync()
    {
        heroes = (await UnmatchedService.GetHeroesStatisticsAsync()).OrderBy(x => x.HeroName).ToArray();
    }
    
    public void RecordClickHandler(RecordClickEventArgs<HeroStatisticsDto> args)
    {
        var heroId = args.RowData.HeroId;
        var url = $"/heroes-statistics/{heroId}";
        NavManager.NavigateTo(url);
    }
}