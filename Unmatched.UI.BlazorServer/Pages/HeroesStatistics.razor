@page "/heroes-statistics"
@using Unmatched.Dtos
@using Unmatched.Services
@using Unmatched.Constants
@inject IUnmatchedService UnmatchedService
@inject NavigationManager NavManager

<PageTitle>Heroes Statistics</PageTitle>

<h1>Heroes Statistics</h1>

@if (heroes == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Hero</th>
            <th>Matches</th>
            <th style="background-color: @Colors.WinnerColor">Wins</th>
            <th style="background-color: @Colors.LooserColor">Looses</th>
            <th>K/D</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var hero in heroes)
        {
            <tr>
                <td @onclick="@(e => OnHeroClick(hero.HeroId))">@hero.HeroName</td>
                <td >@hero.TotalMatches</td>
                <td >@hero.TotalWins</td>
                <td >@hero.TotalLooses</td>
                <td >@hero.Kd</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {

    private IEnumerable<HeroStatisticsDto> heroes;

    protected override async Task OnInitializedAsync()
    {
        heroes = (await UnmatchedService.GetHeroesStatisticsAsync()).OrderBy(x => x.HeroName).ToArray();
    }

    protected void OnHeroClick(Guid heroId)
    {
        var url = $"/heroes-statistics/{heroId}";
        NavManager.NavigateTo(url);
    }
}