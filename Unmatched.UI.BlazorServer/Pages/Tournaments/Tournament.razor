@page "/tournaments/{id}"
@using BlazorBootstrap
@using Microsoft.AspNetCore.Components
@using Unmatched.Dtos
@using Unmatched.Dtos.Match
@using Unmatched.Enums
@using Unmatched.Services
@using Unmatched.Services.Contracts
@inject ITournamentService TournamentService
@inject IMatchService MatchService

<div class="page-content tournament-background">
    <h1 class="page-title" style="text-align: center">@TournamentModel.Name</h1>
    @if (TournamentModel.Type == TournamentType.Championship)
    {
        <div class="net">
            @for (var stage = TournamentModel.InitialStage; stage <= Stage.GrandFinals; stage++)
            {
                <div>
                    <TournamentStage TournamentModel="TournamentModel" Stage="stage" TournamentMatches="@TournamentMatches"></TournamentStage>
                </div>
            }
        </div>
    }
    else
    {
        <DuelMatches MatchLogEntries="LeagueMatches"></DuelMatches>
    }
</div>

@code {
    [Parameter]
    public string Id { get; set; } = "";

    private TournamentDto TournamentModel { get; set; } = new ();
    private List<MatchDto> TournamentMatches { get; set; } = new();
    private List<MatchLogDto> LeagueMatches { get; set; } = new();
    
    [Inject] protected PreloadService PreloadService { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            PreloadService.Show();
            Guid.TryParse(Id, out var tournamentId);
            if (tournamentId == Guid.Empty)
            {
                return;
            }
            
            TournamentModel = await TournamentService.GetAsync(tournamentId);
            TournamentMatches = (await MatchService.GetByTournamentIdAsync(tournamentId)).ToList();
            LeagueMatches = (await MatchService.GetMatchLogAsync())
                .Where(m => m.TournamentName == TournamentModel.Name)
                .OrderByDescending(x => x.Date)
                .ToList();
            
            foreach (var matchLogEntry in LeagueMatches)
            {
                matchLogEntry.Fighters = matchLogEntry.Fighters.OrderBy(x => x.Turn);
            }
        }
        finally
        {
            PreloadService.Hide();
        }
    }
}

<style>
    .net {
          display: grid;
          grid-template-columns: repeat(5, 1fr);
    }
    
    .tournament-background {
        background-image: url('@($"./{TournamentModel.Name}.jpg")');
        background-repeat: no-repeat;
        background-size: cover;
        height: 100vh;
    }
</style>