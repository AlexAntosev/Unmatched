@using Unmatched.Dtos
<EditForm Model=@Fighter>
    <fieldset>
        <legend>@Title</legend>
        <div>
            <label for="players">Player:</label>
            <InputSelect @bind-Value=Fighter.PlayerId name="Player" id="players" class="form-select">
                @foreach (var player in Players)
                {
                    <option value="@player.Id"> @player.Name</option>
                }
            </InputSelect >
        </div>
        <div>
            <label for="hero">Hero:</label>
            @* ValueChanged="@((string value) => HeroChanged(value))" *@
            <InputSelect name="Hero" id="hero" class="form-select" ValueExpression="@(()=>Fighter.HeroId)" 
                         Value="@Fighter.HeroId" 
                         ValueChanged="@((Guid value) => HeroChanged(value))">
                @foreach (var hero in Heroes)
                {
                    <option value="@hero.Id"> @hero.Name</option>
                }
            </InputSelect>
        </div>
        <div>
            <label for="hp">HP:</label>
            <InputNumber @bind-Value=Fighter.HpLeft id="hp" class="form-control"/>
        </div>
        <div>
            <label for="sidekick">Sidekick:</label>
            <InputText @bind-Value=Fighter.SidekickName id="sidekick" class="form-control" disabled="true"/>
        </div>
        <div>
            <label for="sidekickHP">Sidekick HP:</label>
            <InputNumber @bind-Value=Fighter.SidekickHpLeft id="sidekickHP" class="form-control"/>
        </div>
        <div>
            <label for="cardsLeft">Cards Left:</label>
            <InputNumber @bind-Value=Fighter.CardsLeft id="cardsLeft" class="form-control"/>
        </div>
        <div>
            <label for="itemsUsed">Items Used:</label>
            <InputNumber @bind-Value=Fighter.ItemsUsed id="itemsUsed" class="form-control"/>
        </div>
        <div>
            <label for="isWinner">Winner:</label>
            <InputCheckbox @bind-Value=Fighter.IsWinner id="isWinner" class="form-check-label"/>
        </div>
        <div>
            <label for="turn">Turn:</label>
            <InputNumber @bind-Value=Fighter.Turn id="turn" class="form-control"/>
        </div>
    </fieldset>
</EditForm>

@code {

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public IEnumerable<HeroDto> Heroes { get; set; }

    [Parameter]
    public IEnumerable<PlayerDto> Players { get; set; }

    public FighterDto Fighter = new ();

    public FighterDto BuildDto()
    {
        return Fighter;
    }

    private void HeroChanged(Guid heroId)
    {
        var hero = Heroes.First(h => h.Id == heroId);
        SetHeroInfo(hero);
    }

    public void SetHeroInfo(HeroDto hero)
    {
        Fighter.HpLeft = hero.Hp;
        Fighter.HeroId = hero.Id;
        Fighter.SidekickName = hero.Sidekicks.FirstOrDefault()?.Name;
        Fighter.SidekickHpLeft = hero.Sidekicks.Sum(s => s.Hp * s.Count);
        Fighter.CardsLeft = hero.DeckSize;
    }
}