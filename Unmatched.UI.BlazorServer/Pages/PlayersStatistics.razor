@page "/players-statistics"
@using Unmatched.Dtos
@using Unmatched.Services.Statistics
@inject NavigationManager NavManager
@inject IPlayerStatisticsService PlayerStatisticsService

<div class="page-content">
    <PageTitle>Players Statistics</PageTitle>

    <h1 class="page-title">Players Statistics</h1>
    
    <SfGrid DataSource="@players" AllowPaging="true" AllowSorting="true">
        <GridPageSettings PageSize="20"></GridPageSettings>
        <GridEvents OnRecordClick="RecordClickHandler" TValue="PlayerStatisticsDto"></GridEvents>
        <GridColumns>
            <GridColumn Field=@nameof(PlayerStatisticsDto.PlayerName) HeaderText="Player" Width="120"></GridColumn>
            <GridColumn Field=@nameof(PlayerStatisticsDto.TotalMatches) HeaderText="Matches" Width="80"></GridColumn>
            <GridColumn Field=@nameof(PlayerStatisticsDto.TotalWins) HeaderText="Wins" Width="80"></GridColumn>
            <GridColumn Field=@nameof(PlayerStatisticsDto.TotalLooses) HeaderText="Looses" Width="80"></GridColumn>
            <GridColumn Field=@nameof(PlayerStatisticsDto.Kd) HeaderText="K/D" Width="50"></GridColumn>
        </GridColumns>
    </SfGrid>
</div>

@code {

    private IEnumerable<PlayerStatisticsDto> players;
    [Inject] protected BlazorBootstrap.PreloadService PreloadService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            PreloadService.Show();
            players = (await PlayerStatisticsService.GetPlayersStatisticsAsync()).OrderBy(x => x.PlayerName).ToArray();
        }
        finally
        {
            PreloadService.Hide();
        }
    }
    
    public void RecordClickHandler(RecordClickEventArgs<PlayerStatisticsDto> args)
    {
        var playerId = args.RowData.PlayerId;
        var url = $"/players-statistics/{playerId}";
        NavManager.NavigateTo(url);
    }
}