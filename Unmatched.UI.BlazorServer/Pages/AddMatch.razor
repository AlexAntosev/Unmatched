@page "/addMatch"
@using Unmatched.Services
@using Unmatched.Dtos
@inject IUnmatchedService UnmatchedService

<PageTitle>Add match</PageTitle>
<div class="row">
    <div class="column center">
        <FighterInfo Title="Fighter" Players="_players" Heroes="_heroes"></FighterInfo>
    </div>
    <div class="column center">
        <FighterInfo Title="Opponent" Players="_players" Heroes="_heroes"></FighterInfo>
    </div>
</div>

<div class="row">
    <div class="triple-column"></div>
    <div class="triple-column center">
        <div>
            <div>
                <label for="Date">Date:</label>
                <input type="date" name="Date" value=""/>
            </div>
            <div>
                <label for="Comment">Comment:</label>
                <input type="text" name="Comment" value=""/>
            </div>
            <button class="btn btn-primary" @onclick="AddNewMatch">Add match</button>
        </div>
    </div>
    <div class="triple-column"></div>
</div>

@code {
    private IEnumerable<PlayerDto> _players;
    private IEnumerable<HeroDto> _heroes;
    
    protected override async Task OnInitializedAsync()
    {
        _players = UnmatchedService.GetAllPlayers();
        _heroes = UnmatchedService.GetAllHeroes();
    }
    
    private async Task AddNewMatch()
    {
        var match = new MatchDto();
        var fighter = new FighterDto();
        var opponent = new FighterDto();
        await UnmatchedService.AddDuelMatchAsync(match, fighter, opponent);
    }
}