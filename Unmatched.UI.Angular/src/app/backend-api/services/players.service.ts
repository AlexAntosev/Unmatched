/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiPlayersGet } from '../fn/players/api-players-get';
import { ApiPlayersGet$Params } from '../fn/players/api-players-get';
import { apiPlayersStatisticsGet } from '../fn/players/api-players-statistics-get';
import { ApiPlayersStatisticsGet$Params } from '../fn/players/api-players-statistics-get';
import { apiPlayersStatisticsHeroIdGet } from '../fn/players/api-players-statistics-hero-id-get';
import { ApiPlayersStatisticsHeroIdGet$Params } from '../fn/players/api-players-statistics-hero-id-get';
import { PlayerStatisticsDto } from '../models/player-statistics-dto';
import { UiPlayerDto } from '../models/ui-player-dto';

@Injectable({ providedIn: 'root' })
export class PlayersService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiPlayersGet()` */
  static readonly ApiPlayersGetPath = '/api/Players';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiPlayersGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPlayersGet$Response(params?: ApiPlayersGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<UiPlayerDto>>> {
    return apiPlayersGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiPlayersGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPlayersGet(params?: ApiPlayersGet$Params, context?: HttpContext): Observable<Array<UiPlayerDto>> {
    return this.apiPlayersGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<UiPlayerDto>>): Array<UiPlayerDto> => r.body)
    );
  }

  /** Path part for operation `apiPlayersStatisticsGet()` */
  static readonly ApiPlayersStatisticsGetPath = '/api/Players/statistics';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiPlayersStatisticsGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPlayersStatisticsGet$Response(params?: ApiPlayersStatisticsGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<PlayerStatisticsDto>>> {
    return apiPlayersStatisticsGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiPlayersStatisticsGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPlayersStatisticsGet(params?: ApiPlayersStatisticsGet$Params, context?: HttpContext): Observable<Array<PlayerStatisticsDto>> {
    return this.apiPlayersStatisticsGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<PlayerStatisticsDto>>): Array<PlayerStatisticsDto> => r.body)
    );
  }

  /** Path part for operation `apiPlayersStatisticsHeroIdGet()` */
  static readonly ApiPlayersStatisticsHeroIdGetPath = '/api/Players/statistics/{heroId}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiPlayersStatisticsHeroIdGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPlayersStatisticsHeroIdGet$Response(params: ApiPlayersStatisticsHeroIdGet$Params, context?: HttpContext): Observable<StrictHttpResponse<PlayerStatisticsDto>> {
    return apiPlayersStatisticsHeroIdGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiPlayersStatisticsHeroIdGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPlayersStatisticsHeroIdGet(params: ApiPlayersStatisticsHeroIdGet$Params, context?: HttpContext): Observable<PlayerStatisticsDto> {
    return this.apiPlayersStatisticsHeroIdGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<PlayerStatisticsDto>): PlayerStatisticsDto => r.body)
    );
  }

}
