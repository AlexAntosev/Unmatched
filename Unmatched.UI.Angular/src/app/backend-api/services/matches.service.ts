/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiMatchesGet } from '../fn/matches/api-matches-get';
import { ApiMatchesGet$Params } from '../fn/matches/api-matches-get';
import { apiMatchesHeroIdGet } from '../fn/matches/api-matches-hero-id-get';
import { ApiMatchesHeroIdGet$Params } from '../fn/matches/api-matches-hero-id-get';
import { UiMatchLogDto } from '../models/ui-match-log-dto';

@Injectable({ providedIn: 'root' })
export class MatchesService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiMatchesGet()` */
  static readonly ApiMatchesGetPath = '/api/Matches';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiMatchesGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiMatchesGet$Response(params?: ApiMatchesGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<UiMatchLogDto>>> {
    return apiMatchesGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiMatchesGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiMatchesGet(params?: ApiMatchesGet$Params, context?: HttpContext): Observable<Array<UiMatchLogDto>> {
    return this.apiMatchesGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<UiMatchLogDto>>): Array<UiMatchLogDto> => r.body)
    );
  }

  /** Path part for operation `apiMatchesHeroIdGet()` */
  static readonly ApiMatchesHeroIdGetPath = '/api/Matches/{heroId}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiMatchesHeroIdGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiMatchesHeroIdGet$Response(params: ApiMatchesHeroIdGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<UiMatchLogDto>>> {
    return apiMatchesHeroIdGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiMatchesHeroIdGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiMatchesHeroIdGet(params: ApiMatchesHeroIdGet$Params, context?: HttpContext): Observable<Array<UiMatchLogDto>> {
    return this.apiMatchesHeroIdGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<UiMatchLogDto>>): Array<UiMatchLogDto> => r.body)
    );
  }

}
